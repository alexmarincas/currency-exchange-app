{"version":3,"sources":["api/data.js","api/symbols.js","components/Header.js","components/Card.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","context/MainContext.js"],"names":["data","symbols","Header","useContext","MainContext","date","setDate","handleFadeOut","onClick","className","src","alt","onChange","value","Card","currency","useState","symbol","setSymbol","setValue","valueTitle","setValueTitle","name","code","index","base","setBase","rates","allCurrency","setAllCurrency","amount","setAmount","coeficient","setCoeficient","useEffect","JSON","stringify","convertedAmount","toFixed","sessionStorage","getItem","val","parse","getSymbolFromCurrency","icon","faTimes","temp","active","size","type","e","isNaN","Number","target","setItem","autoComplete","placeholder","title","onFocus","select","Footer","setShowCurrencyList","showCurrencyList","currencyRef","toggleChevron","setToggleChevron","undefined","s","TweenMax","to","current","y","opacity","setTimeout","faChevronUp","rotation","Loading","access_key","Currency","React","lazy","App","setRates","Date","useRef","fetch","then","response","json","success","console","error","catch","err","localData","log","temp_array","Object","keys","map","key","i","localSymbols","length","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","document","getElementById","classList","add","remove","state","Provider","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","createContext"],"mappings":"iSAAaA,EAGD,MAHCA,EAKA,CACP,IAAO,SACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,SACP,IAAO,QACP,IAAO,YACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,YACP,IAAO,UACP,IAAO,UACP,IAAO,SACP,IAAO,aACP,IAAO,SACP,IAAO,SACP,IAAO,YACP,IAAO,SACP,IAAO,QACP,IAAO,WACP,IAAO,SACP,IAAO,YACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,WACP,IAAO,UACP,IAAO,SACP,IAAO,UACP,IAAO,EACP,IAAO,SACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,aACP,IAAO,SACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,QACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,YACP,IAAO,aACP,IAAO,WACP,IAAO,QACP,IAAO,WACP,IAAO,MACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,YACP,IAAO,YACP,IAAO,QACP,IAAO,QACP,IAAO,WACP,IAAO,aACP,IAAO,YACP,IAAO,WACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,QACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,YACP,IAAO,YACP,IAAO,SACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,SACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,YACP,IAAO,SACP,IAAO,SACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,aACP,IAAO,WACP,IAAO,UACP,IAAO,aACP,IAAO,UACP,IAAO,YACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,UACP,IAAO,YACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,aACP,IAAO,mBACP,IAAO,aACP,IAAO,WACP,IAAO,SACP,IAAO,WACP,IAAO,OACP,IAAO,OACP,IAAO,SACP,IAAO,QACP,IAAO,WACP,IAAO,WACP,IAAO,WACP,IAAO,SACP,IAAO,aACP,IAAO,UACP,IAAO,YC7KAC,EAEE,CACT,IAAO,8BACP,IAAO,iBACP,IAAO,eACP,IAAO,gBACP,IAAO,gCACP,IAAO,iBACP,IAAO,iBACP,IAAO,oBACP,IAAO,gBACP,IAAO,oBACP,IAAO,sCACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,iBACP,IAAO,kBACP,IAAO,kBACP,IAAO,gBACP,IAAO,qBACP,IAAO,iBACP,IAAO,kBACP,IAAO,UACP,IAAO,qBACP,IAAO,iBACP,IAAO,uBACP,IAAO,mBACP,IAAO,gBACP,IAAO,kBACP,IAAO,kBACP,IAAO,cACP,IAAO,+BACP,IAAO,eACP,IAAO,eACP,IAAO,iBACP,IAAO,uBACP,IAAO,yBACP,IAAO,aACP,IAAO,sBACP,IAAO,wBACP,IAAO,mBACP,IAAO,eACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,OACP,IAAO,gBACP,IAAO,yBACP,IAAO,yBACP,IAAO,gBACP,IAAO,iBACP,IAAO,gBACP,IAAO,kBACP,IAAO,iBACP,IAAO,gBACP,IAAO,qBACP,IAAO,mBACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,iBACP,IAAO,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","file":"static/js/main.7f54e49a.chunk.js","sourcesContent":["export const data = {\r\n    \"success\": true,\r\n    \"timestamp\": 1629232924,\r\n    \"base\": \"EUR\",\r\n    \"date\": \"2021-08-17\",\r\n    \"rates\": {\r\n      \"AED\": 4.300782,\r\n      \"AFN\": 100.866374,\r\n      \"ALL\": 120.778412,\r\n      \"AMD\": 576.224017,\r\n      \"ANG\": 2.101814,\r\n      \"AOA\": 746.71749,\r\n      \"ARS\": 113.758515,\r\n      \"AUD\": 1.614082,\r\n      \"AWG\": 2.107832,\r\n      \"AZN\": 1.987329,\r\n      \"BAM\": 1.946305,\r\n      \"BBD\": 2.36423,\r\n      \"BDT\": 99.460454,\r\n      \"BGN\": 1.955916,\r\n      \"BHD\": 0.441402,\r\n      \"BIF\": 2321.996475,\r\n      \"BMD\": 1.170855,\r\n      \"BND\": 1.590691,\r\n      \"BOB\": 8.085431,\r\n      \"BRL\": 6.19839,\r\n      \"BSD\": 1.170969,\r\n      \"BTC\": 0.00002604377,\r\n      \"BTN\": 86.956149,\r\n      \"BWP\": 13.054215,\r\n      \"BYN\": 2.923393,\r\n      \"BYR\": 22948.757998,\r\n      \"BZD\": 2.360269,\r\n      \"CAD\": 1.478157,\r\n      \"CDF\": 2345.222957,\r\n      \"CHF\": 1.071315,\r\n      \"CLF\": 0.033522,\r\n      \"CLP\": 924.975707,\r\n      \"CNY\": 7.594284,\r\n      \"COP\": 4539.252623,\r\n      \"CRC\": 726.132611,\r\n      \"CUC\": 1.170855,\r\n      \"CUP\": 31.027657,\r\n      \"CVE\": 109.726141,\r\n      \"CZK\": 25.450761,\r\n      \"DJF\": 208.084027,\r\n      \"DKK\": 7.436682,\r\n      \"DOP\": 66.76725,\r\n      \"DZD\": 158.537552,\r\n      \"EGP\": 18.394251,\r\n      \"ERN\": 17.56846,\r\n      \"ETB\": 52.862274,\r\n      \"EUR\": 1,\r\n      \"FJD\": 2.455168,\r\n      \"FKP\": 0.846063,\r\n      \"GBP\": 0.852323,\r\n      \"GEL\": 3.612124,\r\n      \"GGP\": 0.846063,\r\n      \"GHS\": 7.054854,\r\n      \"GIP\": 0.846063,\r\n      \"GMD\": 59.889269,\r\n      \"GNF\": 11433.147779,\r\n      \"GTQ\": 9.069018,\r\n      \"GYD\": 244.762168,\r\n      \"HKD\": 9.124459,\r\n      \"HNL\": 27.797961,\r\n      \"HRK\": 7.49054,\r\n      \"HTG\": 112.997008,\r\n      \"HUF\": 351.835273,\r\n      \"IDR\": 16890.929857,\r\n      \"ILS\": 3.790011,\r\n      \"IMP\": 0.846063,\r\n      \"INR\": 87.078007,\r\n      \"IQD\": 1708.419236,\r\n      \"IRR\": 49298.849662,\r\n      \"ISK\": 148.359211,\r\n      \"JEP\": 0.846063,\r\n      \"JMD\": 180.911644,\r\n      \"JOD\": 0.8301,\r\n      \"JPY\": 128.32925,\r\n      \"KES\": 128.150169,\r\n      \"KGS\": 99.187797,\r\n      \"KHR\": 4774.5341,\r\n      \"KMF\": 487.134357,\r\n      \"KPW\": 1053.769697,\r\n      \"KRW\": 1378.786931,\r\n      \"KWD\": 0.351844,\r\n      \"KYD\": 0.975824,\r\n      \"KZT\": 498.297148,\r\n      \"LAK\": 11224.767562,\r\n      \"LBP\": 1770.435736,\r\n      \"LKR\": 233.604472,\r\n      \"LRD\": 200.947921,\r\n      \"LSL\": 17.10036,\r\n      \"LTL\": 3.457231,\r\n      \"LVL\": 0.708239,\r\n      \"LYD\": 5.29021,\r\n      \"MAD\": 10.502801,\r\n      \"MDL\": 20.520874,\r\n      \"MGA\": 4572.56252,\r\n      \"MKD\": 61.313891,\r\n      \"MMK\": 1927.383058,\r\n      \"MNT\": 3337.991857,\r\n      \"MOP\": 9.399102,\r\n      \"MRO\": 417.995034,\r\n      \"MUR\": 49.702753,\r\n      \"MVR\": 18.101431,\r\n      \"MWK\": 951.404895,\r\n      \"MXN\": 23.437827,\r\n      \"MYR\": 4.962037,\r\n      \"MZN\": 74.560274,\r\n      \"NAD\": 16.825737,\r\n      \"NGN\": 482.042588,\r\n      \"NIO\": 41.118125,\r\n      \"NOK\": 10.436158,\r\n      \"NPR\": 139.130117,\r\n      \"NZD\": 1.693653,\r\n      \"OMR\": 0.450792,\r\n      \"PAB\": 1.170969,\r\n      \"PEN\": 4.781301,\r\n      \"PGK\": 4.110903,\r\n      \"PHP\": 59.040353,\r\n      \"PKR\": 192.638753,\r\n      \"PLN\": 4.563419,\r\n      \"PYG\": 8100.656523,\r\n      \"QAR\": 4.263113,\r\n      \"RON\": 4.924735,\r\n      \"RSD\": 117.005393,\r\n      \"RUB\": 86.193193,\r\n      \"RWF\": 1180.46298,\r\n      \"SAR\": 4.391275,\r\n      \"SBD\": 9.427272,\r\n      \"SCR\": 17.649075,\r\n      \"SDG\": 522.743187,\r\n      \"SEK\": 10.25505,\r\n      \"SGD\": 1.595507,\r\n      \"SHP\": 0.846063,\r\n      \"SLL\": 12001.263785,\r\n      \"SOS\": 684.949849,\r\n      \"SRD\": 25.046912,\r\n      \"STD\": 24234.334551,\r\n      \"SVC\": 10.245815,\r\n      \"SYP\": 1472.436773,\r\n      \"SZL\": 17.349096,\r\n      \"THB\": 39.083354,\r\n      \"TJS\": 13.360402,\r\n      \"TMT\": 4.097992,\r\n      \"TND\": 3.250878,\r\n      \"TOP\": 2.643966,\r\n      \"TRY\": 9.876041,\r\n      \"TTD\": 7.955567,\r\n      \"TWD\": 32.694374,\r\n      \"TZS\": 2715.212284,\r\n      \"UAH\": 31.215735,\r\n      \"UGX\": 4135.76017,\r\n      \"USD\": 1.170855,\r\n      \"UYU\": 50.754614,\r\n      \"UZS\": 12473.317335,\r\n      \"VEF\": 250364184949.82193,\r\n      \"VND\": 26733.546785,\r\n      \"VUV\": 129.832512,\r\n      \"WST\": 2.998283,\r\n      \"XAF\": 652.670944,\r\n      \"XAG\": 0.04952,\r\n      \"XAU\": 0.000656,\r\n      \"XCD\": 3.164294,\r\n      \"XDR\": 0.822658,\r\n      \"XOF\": 652.751376,\r\n      \"XPF\": 118.548881,\r\n      \"YER\": 292.713472,\r\n      \"ZAR\": 17.45874,\r\n      \"ZMK\": 10539.103703,\r\n      \"ZMW\": 22.417695,\r\n      \"ZWL\": 377.014833\r\n    }\r\n  }","export const symbols = {\r\n    \"success\": true,\r\n    \"symbols\": {\r\n      \"AED\": \"United Arab Emirates Dirham\",\r\n      \"AFN\": \"Afghan Afghani\",\r\n      \"ALL\": \"Albanian Lek\",\r\n      \"AMD\": \"Armenian Dram\",\r\n      \"ANG\": \"Netherlands Antillean Guilder\",\r\n      \"AOA\": \"Angolan Kwanza\",\r\n      \"ARS\": \"Argentine Peso\",\r\n      \"AUD\": \"Australian Dollar\",\r\n      \"AWG\": \"Aruban Florin\",\r\n      \"AZN\": \"Azerbaijani Manat\",\r\n      \"BAM\": \"Bosnia-Herzegovina Convertible Mark\",\r\n      \"BBD\": \"Barbadian Dollar\",\r\n      \"BDT\": \"Bangladeshi Taka\",\r\n      \"BGN\": \"Bulgarian Lev\",\r\n      \"BHD\": \"Bahraini Dinar\",\r\n      \"BIF\": \"Burundian Franc\",\r\n      \"BMD\": \"Bermudan Dollar\",\r\n      \"BND\": \"Brunei Dollar\",\r\n      \"BOB\": \"Bolivian Boliviano\",\r\n      \"BRL\": \"Brazilian Real\",\r\n      \"BSD\": \"Bahamian Dollar\",\r\n      \"BTC\": \"Bitcoin\",\r\n      \"BTN\": \"Bhutanese Ngultrum\",\r\n      \"BWP\": \"Botswanan Pula\",\r\n      \"BYN\": \"New Belarusian Ruble\",\r\n      \"BYR\": \"Belarusian Ruble\",\r\n      \"BZD\": \"Belize Dollar\",\r\n      \"CAD\": \"Canadian Dollar\",\r\n      \"CDF\": \"Congolese Franc\",\r\n      \"CHF\": \"Swiss Franc\",\r\n      \"CLF\": \"Chilean Unit of Account (UF)\",\r\n      \"CLP\": \"Chilean Peso\",\r\n      \"CNY\": \"Chinese Yuan\",\r\n      \"COP\": \"Colombian Peso\",\r\n      \"CRC\": \"Costa Rican Colón\",\r\n      \"CUC\": \"Cuban Convertible Peso\",\r\n      \"CUP\": \"Cuban Peso\",\r\n      \"CVE\": \"Cape Verdean Escudo\",\r\n      \"CZK\": \"Czech Republic Koruna\",\r\n      \"DJF\": \"Djiboutian Franc\",\r\n      \"DKK\": \"Danish Krone\",\r\n      \"DOP\": \"Dominican Peso\",\r\n      \"DZD\": \"Algerian Dinar\",\r\n      \"EGP\": \"Egyptian Pound\",\r\n      \"ERN\": \"Eritrean Nakfa\",\r\n      \"ETB\": \"Ethiopian Birr\",\r\n      \"EUR\": \"Euro\",\r\n      \"FJD\": \"Fijian Dollar\",\r\n      \"FKP\": \"Falkland Islands Pound\",\r\n      \"GBP\": \"British Pound Sterling\",\r\n      \"GEL\": \"Georgian Lari\",\r\n      \"GGP\": \"Guernsey Pound\",\r\n      \"GHS\": \"Ghanaian Cedi\",\r\n      \"GIP\": \"Gibraltar Pound\",\r\n      \"GMD\": \"Gambian Dalasi\",\r\n      \"GNF\": \"Guinean Franc\",\r\n      \"GTQ\": \"Guatemalan Quetzal\",\r\n      \"GYD\": \"Guyanaese Dollar\",\r\n      \"HKD\": \"Hong Kong Dollar\",\r\n      \"HNL\": \"Honduran Lempira\",\r\n      \"HRK\": \"Croatian Kuna\",\r\n      \"HTG\": \"Haitian Gourde\",\r\n      \"HUF\": \"Hungarian Forint\",\r\n      \"IDR\": \"Indonesian Rupiah\",\r\n      \"ILS\": \"Israeli New Sheqel\",\r\n      \"IMP\": \"Manx pound\",\r\n      \"INR\": \"Indian Rupee\",\r\n      \"IQD\": \"Iraqi Dinar\",\r\n      \"IRR\": \"Iranian Rial\",\r\n      \"ISK\": \"Icelandic Króna\",\r\n      \"JEP\": \"Jersey Pound\",\r\n      \"JMD\": \"Jamaican Dollar\",\r\n      \"JOD\": \"Jordanian Dinar\",\r\n      \"JPY\": \"Japanese Yen\",\r\n      \"KES\": \"Kenyan Shilling\",\r\n      \"KGS\": \"Kyrgystani Som\",\r\n      \"KHR\": \"Cambodian Riel\",\r\n      \"KMF\": \"Comorian Franc\",\r\n      \"KPW\": \"North Korean Won\",\r\n      \"KRW\": \"South Korean Won\",\r\n      \"KWD\": \"Kuwaiti Dinar\",\r\n      \"KYD\": \"Cayman Islands Dollar\",\r\n      \"KZT\": \"Kazakhstani Tenge\",\r\n      \"LAK\": \"Laotian Kip\",\r\n      \"LBP\": \"Lebanese Pound\",\r\n      \"LKR\": \"Sri Lankan Rupee\",\r\n      \"LRD\": \"Liberian Dollar\",\r\n      \"LSL\": \"Lesotho Loti\",\r\n      \"LTL\": \"Lithuanian Litas\",\r\n      \"LVL\": \"Latvian Lats\",\r\n      \"LYD\": \"Libyan Dinar\",\r\n      \"MAD\": \"Moroccan Dirham\",\r\n      \"MDL\": \"Moldovan Leu\",\r\n      \"MGA\": \"Malagasy Ariary\",\r\n      \"MKD\": \"Macedonian Denar\",\r\n      \"MMK\": \"Myanma Kyat\",\r\n      \"MNT\": \"Mongolian Tugrik\",\r\n      \"MOP\": \"Macanese Pataca\",\r\n      \"MRO\": \"Mauritanian Ouguiya\",\r\n      \"MUR\": \"Mauritian Rupee\",\r\n      \"MVR\": \"Maldivian Rufiyaa\",\r\n      \"MWK\": \"Malawian Kwacha\",\r\n      \"MXN\": \"Mexican Peso\",\r\n      \"MYR\": \"Malaysian Ringgit\",\r\n      \"MZN\": \"Mozambican Metical\",\r\n      \"NAD\": \"Namibian Dollar\",\r\n      \"NGN\": \"Nigerian Naira\",\r\n      \"NIO\": \"Nicaraguan Córdoba\",\r\n      \"NOK\": \"Norwegian Krone\",\r\n      \"NPR\": \"Nepalese Rupee\",\r\n      \"NZD\": \"New Zealand Dollar\",\r\n      \"OMR\": \"Omani Rial\",\r\n      \"PAB\": \"Panamanian Balboa\",\r\n      \"PEN\": \"Peruvian Nuevo Sol\",\r\n      \"PGK\": \"Papua New Guinean Kina\",\r\n      \"PHP\": \"Philippine Peso\",\r\n      \"PKR\": \"Pakistani Rupee\",\r\n      \"PLN\": \"Polish Zloty\",\r\n      \"PYG\": \"Paraguayan Guarani\",\r\n      \"QAR\": \"Qatari Rial\",\r\n      \"RON\": \"Romanian Leu\",\r\n      \"RSD\": \"Serbian Dinar\",\r\n      \"RUB\": \"Russian Ruble\",\r\n      \"RWF\": \"Rwandan Franc\",\r\n      \"SAR\": \"Saudi Riyal\",\r\n      \"SBD\": \"Solomon Islands Dollar\",\r\n      \"SCR\": \"Seychellois Rupee\",\r\n      \"SDG\": \"Sudanese Pound\",\r\n      \"SEK\": \"Swedish Krona\",\r\n      \"SGD\": \"Singapore Dollar\",\r\n      \"SHP\": \"Saint Helena Pound\",\r\n      \"SLL\": \"Sierra Leonean Leone\",\r\n      \"SOS\": \"Somali Shilling\",\r\n      \"SRD\": \"Surinamese Dollar\",\r\n      \"STD\": \"São Tomé and Príncipe Dobra\",\r\n      \"SVC\": \"Salvadoran Colón\",\r\n      \"SYP\": \"Syrian Pound\",\r\n      \"SZL\": \"Swazi Lilangeni\",\r\n      \"THB\": \"Thai Baht\",\r\n      \"TJS\": \"Tajikistani Somoni\",\r\n      \"TMT\": \"Turkmenistani Manat\",\r\n      \"TND\": \"Tunisian Dinar\",\r\n      \"TOP\": \"Tongan Paʻanga\",\r\n      \"TRY\": \"Turkish Lira\",\r\n      \"TTD\": \"Trinidad and Tobago Dollar\",\r\n      \"TWD\": \"New Taiwan Dollar\",\r\n      \"TZS\": \"Tanzanian Shilling\",\r\n      \"UAH\": \"Ukrainian Hryvnia\",\r\n      \"UGX\": \"Ugandan Shilling\",\r\n      \"USD\": \"United States Dollar\",\r\n      \"UYU\": \"Uruguayan Peso\",\r\n      \"UZS\": \"Uzbekistan Som\",\r\n      \"VEF\": \"Venezuelan Bolívar Fuerte\",\r\n      \"VND\": \"Vietnamese Dong\",\r\n      \"VUV\": \"Vanuatu Vatu\",\r\n      \"WST\": \"Samoan Tala\",\r\n      \"XAF\": \"CFA Franc BEAC\",\r\n      \"XAG\": \"Silver (troy ounce)\",\r\n      \"XAU\": \"Gold (troy ounce)\",\r\n      \"XCD\": \"East Caribbean Dollar\",\r\n      \"XDR\": \"Special Drawing Rights\",\r\n      \"XOF\": \"CFA Franc BCEAO\",\r\n      \"XPF\": \"CFP Franc\",\r\n      \"YER\": \"Yemeni Rial\",\r\n      \"ZAR\": \"South African Rand\",\r\n      \"ZMK\": \"Zambian Kwacha (pre-2013)\",\r\n      \"ZMW\": \"Zambian Kwacha\",\r\n      \"ZWL\": \"Zimbabwean Dollar\"\r\n    }\r\n  }","import React, { useContext } from 'react'\r\n\r\nimport DatePicker from 'react-date-picker'\r\nimport MainContext from '../context/MainContext'\r\n\r\nimport '../styles/header.css'\r\n\r\nconst Header = () => {\r\n\r\n    const { date, setDate, handleFadeOut } = useContext(MainContext)\r\n    \r\n    return (\r\n        <header onClick={handleFadeOut}>\r\n            <div className='logo'>\r\n                <img src='./logo.png' alt='logo'/>\r\n                <p>Currency Exchange</p>\r\n            </div>\r\n            <section>\r\n                <DatePicker\r\n                    onChange={setDate}\r\n                    value={date}\r\n                />\r\n            </section>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport getSymbolFromCurrency from 'currency-symbol-map'\r\nimport CurrencyFlag from 'react-currency-flags'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport MainContext from '../context/MainContext'\r\n\r\nconst Card = ({currency}) => {\r\n\r\n    const [ symbol, setSymbol ] = useState(null)\r\n    const [ value, setValue ] = useState('')\r\n    const [ valueTitle, setValueTitle ] = useState('')\r\n\r\n    const { name, code, index } = currency\r\n    const { base, setBase, rates, allCurrency, setAllCurrency, amount, setAmount, coeficient, setCoeficient } = useContext(MainContext)\r\n\r\n    // Here we are updating the exchange value for all the active cards, except the one we are typing in\r\n    useEffect(() => {\r\n        if(code!==base && base && JSON.stringify(rates)!==JSON.stringify({})){\r\n            const convertedAmount = rates[code] * amount * coeficient\r\n            setValue( convertedAmount.toFixed(2) )\r\n            setValueTitle( convertedAmount.toFixed(6) )            \r\n        }else{\r\n            setValueTitle(value)\r\n            if(code === base){\r\n                if( sessionStorage.getItem('last_value_entered') ){\r\n                    const val = JSON.parse(sessionStorage.getItem('last_value_entered'))\r\n                    setValue( val )\r\n                    setCoeficient( code==='EUR' ? 1 : 1/rates[code] )\r\n                    setAmount( val )\r\n                }\r\n            }\r\n        }\r\n    }, [base, code, rates, amount, coeficient, value])\r\n\r\n    // Get the currency symbol\r\n    useEffect(()=>{\r\n        setSymbol( getSymbolFromCurrency(code) )\r\n    },[code])\r\n\r\n    // Update the card exchange value and set the card's currency as base; here we updating also the coeficient because the current subscription (free) doesn't support the custom base endpoint\r\n    const handleChange = e =>{\r\n        if(code !== base){\r\n            setBase(code)\r\n            setCoeficient( code==='EUR' ? 1 : 1/rates[code] )\r\n        }\r\n\r\n        if(!isNaN( Number(e.target.value) )){\r\n            setValue( e.target.value )\r\n            setAmount( e.target.value )\r\n            sessionStorage.setItem('last_value_entered', JSON.stringify( e.target.value ) )\r\n        }\r\n\r\n    }\r\n\r\n    // Remove the card when we click the x button; also, if the card removed was the one set as base, we reset the base currency to EUR\r\n    const handleRemoveCard = () =>{\r\n        const temp = [...allCurrency]\r\n        temp[index].active = false        \r\n        setAllCurrency(temp)\r\n        if( temp[index].code === base ){\r\n            setBase('EUR')\r\n            setCoeficient(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={ base===code ? 'card base' : 'card'}>\r\n            <FontAwesomeIcon icon={ faTimes } className='close' onClick={ handleRemoveCard } />\r\n            <CurrencyFlag currency={ code } className='flag' size=\"lg\" />\r\n            <p className='symbol'>{symbol}</p>\r\n            <input \r\n                type='text' \r\n                value={value} \r\n                onChange={ handleChange } \r\n                autoComplete=\"false\" \r\n                className='textbox' \r\n                placeholder='amount' \r\n                title={ valueTitle }\r\n                onFocus={ e => e.target.select() }\r\n            />\r\n            <p className='abbreviation'>{code}</p>\r\n            <p className='convert' data-msg={`${(rates[code] * coeficient).toFixed(6)} ${code}`}>1 {base} = { (rates[code] * coeficient).toFixed(2)} {code}</p>\r\n            <p className='name'>{name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useContext } from 'react'\r\nimport MainContext from '../context/MainContext'\r\nimport { TweenMax } from 'gsap'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../styles/footer.css'\r\n\r\nconst Footer = () => {\r\n\r\n    const { setShowCurrencyList, showCurrencyList, currencyRef, toggleChevron, setToggleChevron } = useContext(MainContext)\r\n    \r\n    // Toggle the currency list by clicking the CTA button\r\n    const handleClick = () => {\r\n\r\n        setToggleChevron(s=>!s)\r\n\r\n        if(showCurrencyList){\r\n            TweenMax.to(\r\n                currencyRef.current,\r\n                .3,\r\n                { y: '200px', opacity: 0 }\r\n            )\r\n\r\n            setTimeout(()=>setShowCurrencyList(false), 300)\r\n        }else{\r\n            setShowCurrencyList(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <footer \r\n            className={ !showCurrencyList ? 'tooltip' : undefined } \r\n            data-tooltip='Add currency'\r\n            onClick={ handleClick }\r\n        >\r\n            <FontAwesomeIcon icon={faChevronUp} className='expand_collapse' rotation={ toggleChevron ? 180 : 0} />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport '../styles/loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='loading'>\r\n            <h1>Loading</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","\r\nimport React, { Suspense, useState, useEffect, useRef } from 'react'\r\n\r\nimport TweenMax from 'gsap'\r\n\r\n// DUMMY DATA IN CASE OF NETWORK ERROR\r\nimport { data as localData } from './api/data'\r\nimport { symbols as localSymbols } from './api/symbols'\r\n\r\nimport Header from './components/Header'\r\nimport Card from './components/Card'\r\nimport Footer from './components/Footer'\r\nimport MainContext from './context/MainContext'\r\nimport Loading from './components/Loading'\r\n\r\nimport './App.css'\r\nimport './styles/body.css'\r\n\r\nconst access_key = 'af8e95f6ec37b3b3219e0bb172121a74'\r\n\r\nconst Currency = React.lazy(() => import('./components/Currency'))\r\n\r\nfunction App() {\r\n\r\n  const [ base, setBase ] = useState('')\r\n  const [ coeficient, setCoeficient ] = useState(1)\r\n  const [ amount, setAmount ] = useState(0)\r\n  const [ rates, setRates ] = useState({})\r\n  const [ allCurrency, setAllCurrency ] = useState([])\r\n  const [ showCurrencyList, setShowCurrencyList ] = useState(false)\r\n  const [ date, setDate] = useState( new Date() )\r\n  const [ toggleChevron, setToggleChevron ] = useState(false)\r\n  \r\n  const currencyRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    \r\n    // FETCH LATEST EXCHANGE RATES\r\n    fetch(`http://api.exchangeratesapi.io/v1/latest?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n            setBase(data.base)              \r\n            setRates(data.rates)           \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n\r\n          // LOAD EXCHANGE DATA FROM LOCAL JSON AS A FALLBACK\r\n          setBase(localData.base)\r\n          setRates(localData.rates)\r\n          console.log('Exchange rates data loaded from local JSON')\r\n      })\r\n\r\n    \r\n    // FETCH CURRENCY SYMBOLS\r\n    // This condition was implemented because we are limited on accessing the server to 250 requests / month and also to improve loading time\r\n    if( sessionStorage.getItem('currency_symbols') ){\r\n\r\n      setAllCurrency( JSON.parse( sessionStorage.getItem('currency_symbols') ) )\r\n      console.log('Symbols loaded from session storage')\r\n\r\n    }else{\r\n\r\n      fetch(`http://api.exchangeratesapi.io/v1/symbols?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n\r\n              const s = data.symbols    \r\n              const temp_array = Object.keys(s).map( (key,i) => {  \r\n                return { name: s[key], code: key, index: i, active: false }\r\n              })\r\n              setAllCurrency(temp_array)\r\n              sessionStorage.setItem('currency_symbols', JSON.stringify(temp_array))\r\n              console.log('Symbols fetched from the server')\r\n\r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n\r\n          // LOAD SYMBOLS FROM LOCAL JSON AS A FALLBACK\r\n          const s = localSymbols.symbols    \r\n          const temp_array = Object.keys(s).map( (key,i) => {  \r\n            return { name: s[key], code: key, index: i, active: false }\r\n          })\r\n          setAllCurrency(temp_array)\r\n          sessionStorage.setItem('currency_symbols', JSON.stringify(temp_array))\r\n          console.log('Symbols loaded from local JSON')\r\n      })\r\n\r\n    }\r\n    \r\n  }, [])\r\n\r\n  // Store currency to sessionStorage in order to reduce the number of interogations to the API\r\n  useEffect(() => {\r\n    if(allCurrency.length){\r\n      sessionStorage.setItem('currency_symbols', JSON.stringify(allCurrency))\r\n    }\r\n  }, [allCurrency])\r\n\r\n\r\n  // Fetch new rates each time the date is changing; if the date input is cleared, then we receive the latest rates\r\n  useEffect(() => {\r\n\r\n    // Convert date from 2021-08-19 Thu Aug 19 2021 20:32:24 GMT+0300 (Eastern European Summer Time) to 2021-08-19 format\r\n    const formatDate = date => {\r\n    \r\n      let d = new Date(date),\r\n          month = '' + (d.getMonth() + 1),\r\n          day = '' + d.getDate(),\r\n          year = d.getFullYear()\r\n  \r\n      if (month.length < 2) \r\n          month = '0' + month\r\n      if (day.length < 2) \r\n          day = '0' + day\r\n  \r\n      return [year, month, day].join('-')\r\n    }\r\n\r\n    if(date){\r\n      fetch(`http://api.exchangeratesapi.io/v1/${ formatDate(date) }?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){             \r\n            setRates(data.rates)           \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n\r\n    }else{\r\n      fetch(`http://api.exchangeratesapi.io/v1/latest?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n            setBase(data.base)              \r\n            setRates(data.rates)            \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n    }\r\n  }, [date])\r\n\r\n  // Close the currency list function\r\n  const handleFadeOut = () => {\r\n    \r\n    setToggleChevron(false)\r\n\r\n    if(currencyRef.current){\r\n      TweenMax.to(\r\n        currencyRef.current,\r\n        .3,\r\n        { y: '200px', opacity: 0 }\r\n      )\r\n  \r\n      setTimeout(()=>setShowCurrencyList(false), 300)\r\n    }\r\n  }\r\n\r\n  // Toggle opacity of the root element when the currency list is visible or not\r\n  useEffect(() => {\r\n    if(toggleChevron){\r\n      document.getElementById('root').classList.add(\"modal\")\r\n    }else{\r\n      document.getElementById('root').classList.remove(\"modal\")\r\n    }\r\n  }, [toggleChevron])\r\n\r\n  // State management in order to avoid props drilling\r\n  const state = { coeficient, setCoeficient, toggleChevron, setToggleChevron, handleFadeOut, amount, setAmount, allCurrency, setAllCurrency, base, setBase, showCurrencyList, setShowCurrencyList, currencyRef, rates, setRates, date, setDate }\r\n\r\n  return (\r\n    <MainContext.Provider value={state}>\r\n    <>\r\n        <Header />\r\n        <div className='body' onClick={ handleFadeOut }>\r\n            { allCurrency.map(currency => {\r\n              if(currency.active){\r\n                return <Card currency={currency} key={currency.code} /> \r\n              }else{\r\n                return undefined\r\n              }\r\n            }) }\r\n        </div>\r\n        { showCurrencyList && <Suspense fallback={<Loading />}><Currency /></Suspense> }\r\n        <Footer />\r\n    </>\r\n    </MainContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react'\r\n\r\nconst MainContext = React.createContext()\r\nexport default MainContext"],"sourceRoot":""}