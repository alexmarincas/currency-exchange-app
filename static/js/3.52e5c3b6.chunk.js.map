{"version":3,"sources":["components/Valuta.js","components/Currency.js"],"names":["Valuta","el","index","useState","symbol","setSymbol","useContext","MainContext","allCurrency","setAllCurrency","useEffect","getSymbolFromCurrency","code","className","active","onClick","temp","currency","size","name","icon","faMinusCircle","faPlusCircle","undefined","Currency","currencyRef","search","setSearch","TweenMax","to","current","y","opacity","ref","type","value","onChange","e","target","placeholder","map","i","includes","toUpperCase","toLowerCase"],"mappings":"mQAuCeA,EA7BA,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAEjB,EAA6BC,mBAAS,MAAtC,mBAAQC,EAAR,KAAgBC,EAAhB,KAEA,EAAwCC,qBAAWC,KAA3CC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAGrBC,qBAAU,WACNL,EAAWM,IAAsBV,EAAGW,SACtC,CAACX,EAAGW,KAAMP,IASZ,OACI,sBAAKQ,UAAYZ,EAAGa,OAAS,kBAAoB,SAAUC,QAP3C,WAChB,IAAMC,EAAI,YAAOR,GACjBQ,EAAKd,GAAOY,QAAUE,EAAKd,GAAOY,OAClCL,EAAeO,IAIf,UACI,cAAC,IAAD,CAAcC,SAAWhB,EAAGW,KAAOM,KAAK,OACxC,mBAAGL,UAAU,gBAAb,SAA8BT,IAC9B,mBAAGS,UAAU,cAAb,SAA4BZ,EAAGkB,OAC/B,mBAAGN,UAAU,cAAb,SAA4BZ,EAAGW,OAC/B,cAAC,IAAD,CAAiBQ,KAAOnB,EAAGa,OAASO,IAAgBC,IAAeT,UAAYZ,EAAGa,OAAS,WAAQS,QCEhGC,UA7BE,WAEb,MAAqClB,qBAAWC,KAAxCkB,EAAR,EAAQA,YAAajB,EAArB,EAAqBA,YAErB,EAA8BL,mBAAS,IAAvC,mBAAQuB,EAAR,KAAgBC,EAAhB,KAWA,OARAjB,qBAAU,WACNkB,IAASC,GACLJ,EAAYK,QACZ,GACA,CAAEC,EAAG,MAAOC,QAAS,MAE1B,CAACP,IAGA,sBAAKZ,UAAU,gBAAgBoB,IAAKR,EAApC,UACI,uBAAOS,KAAK,OAAOrB,UAAU,SAASsB,MAAOT,EAAQU,SAAW,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOH,QAASI,YAAY,cAC7G,kCACEb,EACElB,EAAYgC,KAAK,SAACvC,EAAIwC,GAAL,OAAYxC,EAAGW,KAAK8B,SAAShB,EAAOiB,gBAAkB1C,EAAGkB,KAAKyB,cAAcF,SAAShB,EAAOkB,iBAAmB,cAAC,EAAD,CAAQ3C,GAAIA,EAAIC,MAAOuC,GAAvB,YAAoCA,OAEpKjC,EAAYgC,KAAK,SAACvC,EAAIwC,GAAL,OAAW,cAAC,EAAD,CAAQxC,GAAIA,EAAIC,MAAOuC,GAAvB,YAAoCA","file":"static/js/3.52e5c3b6.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport getSymbolFromCurrency from 'currency-symbol-map'\r\nimport CurrencyFlag from 'react-currency-flags'\r\n\r\nimport MainContext from '../context/MainContext'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinusCircle, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Valuta = ({el, index}) => {\r\n\r\n    const [ symbol, setSymbol] = useState(null)\r\n\r\n    const { allCurrency, setAllCurrency } = useContext(MainContext)\r\n\r\n    // Currency symbol\r\n    useEffect(()=>{\r\n        setSymbol( getSymbolFromCurrency(el.code) )\r\n    },[el.code, setSymbol])\r\n\r\n    // Here we toggle the clicked card (active/inactive)\r\n    const handleClick = () =>{\r\n        const temp = [...allCurrency]\r\n        temp[index].active = !temp[index].active\r\n        setAllCurrency(temp)\r\n    }\r\n\r\n    return (\r\n        <div className={ el.active ? 'valuta selected' : 'valuta'} onClick={ handleClick }>\r\n            <CurrencyFlag currency={ el.code } size=\"md\" />\r\n            <p className='valuta_symbol'>{symbol}</p>\r\n            <p className='valuta_name'>{el.name}</p>\r\n            <p className='valuta_code'>{el.code}</p>\r\n            <FontAwesomeIcon icon={ el.active ? faMinusCircle : faPlusCircle } className={ el.active ? 'red' : undefined  }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Valuta\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { TweenMax } from 'gsap'\r\n\r\nimport '../styles/currency.css'\r\nimport MainContext from '../context/MainContext'\r\nimport Valuta from './Valuta'\r\n\r\nconst Currency = () => {\r\n\r\n    const { currencyRef, allCurrency } = useContext(MainContext)\r\n\r\n    const [ search, setSearch ] = useState('')\r\n\r\n    // Fade in / slide up animation\r\n    useEffect(()=>{\r\n        TweenMax.to(\r\n            currencyRef.current,\r\n            .3,\r\n            { y: '0px', opacity: 1 }\r\n        )\r\n    }, [currencyRef])\r\n\r\n    return (        \r\n        <div className='currency-list' ref={currencyRef}>\r\n            <input type='text' className='search' value={search} onChange={ e => setSearch(e.target.value) } placeholder='search...' />\r\n            <section>\r\n            { search ? \r\n                allCurrency.map( (el, i) => (el.code.includes(search.toUpperCase()) || el.name.toLowerCase().includes(search.toLowerCase())) && <Valuta el={el} index={i} key={`el${i}`} />) \r\n                :\r\n                allCurrency.map( (el, i) => <Valuta el={el} index={i} key={`el${i}`} />) \r\n            }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Currency\r\n"],"sourceRoot":""}