{"version":3,"sources":["components/Header.js","components/Card.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","context/MainContext.js"],"names":["Header","useContext","MainContext","date","setDate","handleFadeOut","onClick","className","src","alt","onChange","value","Card","currency","useState","symbol","setSymbol","setValue","name","code","index","base","setBase","rates","allCurrency","setAllCurrency","amount","setAmount","coeficient","setCoeficient","useEffect","convertedAmount","toFixed","getSymbolFromCurrency","icon","faTimes","temp","active","size","type","e","isNaN","Number","target","autoComplete","placeholder","Footer","setShowCurrencyList","showCurrencyList","currencyRef","toggleChevron","setToggleChevron","undefined","s","TweenMax","to","current","y","opacity","setTimeout","faChevronUp","rotation","Loading","access_key","Currency","React","lazy","App","setRates","Date","useRef","fetch","then","response","json","data","success","console","error","catch","err","sessionStorage","getItem","JSON","parse","log","symbols","temp_array","Object","keys","map","key","i","setItem","stringify","length","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","document","getElementById","classList","add","remove","state","Provider","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","createContext"],"mappings":"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","file":"static/js/main.1e76c29d.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\n\r\nimport DatePicker from 'react-date-picker'\r\nimport MainContext from '../context/MainContext'\r\n\r\nimport '../styles/header.css'\r\n\r\nconst Header = () => {\r\n\r\n    const { date, setDate, handleFadeOut } = useContext(MainContext)\r\n    \r\n    return (\r\n        <header onClick={handleFadeOut}>\r\n            <div className='logo'>\r\n                <img src='./logo.png' alt='logo'/>\r\n                <p>Currency Exchange</p>\r\n            </div>\r\n            <section>\r\n                <DatePicker\r\n                    onChange={setDate}\r\n                    value={date}\r\n                />\r\n            </section>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport getSymbolFromCurrency from 'currency-symbol-map'\r\nimport CurrencyFlag from 'react-currency-flags'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport MainContext from '../context/MainContext'\r\n\r\nconst Card = ({currency}) => {\r\n\r\n    const [ symbol, setSymbol ] = useState(null)\r\n    const [ value, setValue ] = useState('')\r\n\r\n    const { name, code, index } = currency\r\n    const { base, setBase, rates, allCurrency, setAllCurrency, amount, setAmount, coeficient, setCoeficient } = useContext(MainContext)\r\n\r\n    // Here we are updating the exchange value for all the active cards, except the one we are typing in\r\n    useEffect(() => {\r\n        if(code!==base){\r\n            const convertedAmount = rates[code] * amount * coeficient\r\n            setValue( convertedAmount.toFixed(2) )\r\n        }\r\n    }, [base, code, rates, amount, coeficient])\r\n\r\n    // Get the currency symbol\r\n    useEffect(()=>{\r\n        setSymbol( getSymbolFromCurrency(code) )\r\n    },[code])\r\n\r\n    // Update the card exchange value and set the card's currency as base; here we updating also the coeficient because the current subscription (free) doesn't support the custom base endpoint\r\n    const handleChange = e =>{\r\n        if(code !== base){\r\n            setBase(code)\r\n            setCoeficient( code==='EUR' ? 1 : 1/rates[code] )\r\n        }\r\n\r\n        if(!isNaN( Number(e.target.value) )){\r\n            setValue( e.target.value )\r\n            setAmount( e.target.value )\r\n        }\r\n    }\r\n\r\n    // Remove the card when we click the x button; also, if the card removed was the one set as base, we reset the base currency to EUR\r\n    const handleRemoveCard = () =>{\r\n        const temp = [...allCurrency]\r\n        temp[index].active = false        \r\n        setAllCurrency(temp)\r\n        if( temp[index].code === base ){\r\n            setBase('EUR')\r\n            setCoeficient(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={ base===code ? 'card base' : 'card'}>\r\n            <FontAwesomeIcon icon={ faTimes } className='close' onClick={ handleRemoveCard } />\r\n            <CurrencyFlag currency={ code } className='flag' size=\"lg\" />\r\n            <p className='symbol'>{symbol}</p>\r\n            <input \r\n                type='text' \r\n                value={value} \r\n                onChange={ handleChange } \r\n                autoComplete=\"false\" \r\n                className='textbox' \r\n                placeholder='amount' \r\n            />\r\n            <p className='abbreviation'>{code}</p>\r\n            <p className='convert' data-msg={`${(rates[code] * coeficient).toFixed(6)} ${code}`}>1 {base} = { (rates[code] * coeficient).toFixed(2)} {code}</p>\r\n            <p className='name'>{name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useContext } from 'react'\r\nimport MainContext from '../context/MainContext'\r\nimport { TweenMax } from 'gsap'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../styles/footer.css'\r\n\r\nconst Footer = () => {\r\n\r\n    const { setShowCurrencyList, showCurrencyList, currencyRef, toggleChevron, setToggleChevron } = useContext(MainContext)\r\n    \r\n    // Toggle the currency list by clicking the CTA button\r\n    const handleClick = () => {\r\n\r\n        setToggleChevron(s=>!s)\r\n\r\n        if(showCurrencyList){\r\n            TweenMax.to(\r\n                currencyRef.current,\r\n                .3,\r\n                { y: '200px', opacity: 0 }\r\n            )\r\n\r\n            setTimeout(()=>setShowCurrencyList(false), 300)\r\n        }else{\r\n            setShowCurrencyList(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <footer \r\n            className={ !showCurrencyList ? 'tooltip' : undefined } \r\n            data-tooltip='Add currency'\r\n            onClick={ handleClick }\r\n        >\r\n            <FontAwesomeIcon icon={faChevronUp} className='expand_collapse' rotation={ toggleChevron ? 180 : 0} />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport '../styles/loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='loading'>\r\n            <h1>Loading</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","\r\nimport React, { Suspense, useState, useEffect, useRef } from 'react'\r\n\r\nimport TweenMax from 'gsap'\r\n\r\n\r\nimport Header from './components/Header'\r\nimport Card from './components/Card'\r\nimport Footer from './components/Footer'\r\nimport MainContext from './context/MainContext'\r\nimport Loading from './components/Loading'\r\n\r\nimport './App.css'\r\nimport './styles/body.css'\r\n\r\nconst access_key = 'af8e95f6ec37b3b3219e0bb172121a74'\r\n\r\nconst Currency = React.lazy(() => import('./components/Currency'))\r\n\r\nfunction App() {\r\n\r\n  const [ base, setBase ] = useState('')\r\n  const [ coeficient, setCoeficient ] = useState(1)\r\n  const [ amount, setAmount ] = useState(0)\r\n  const [ rates, setRates ] = useState({})\r\n  const [ allCurrency, setAllCurrency ] = useState([])\r\n  const [ showCurrencyList, setShowCurrencyList ] = useState(false)\r\n  const [ date, setDate] = useState( new Date() )\r\n  const [ toggleChevron, setToggleChevron ] = useState(false)\r\n  \r\n  const currencyRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    \r\n    // FETCH LATEST EXCHANGE RATES\r\n    fetch(`https://api.exchangeratesapi.io/v1/latest?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n            setBase(data.base)              \r\n            setRates(data.rates)           \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n\r\n    \r\n    // FETCH CURRENCY SYMBOLS\r\n    // This condition was implemented because we are limited on accessing the server to 250 requests / month and also to improve loading time\r\n    if( sessionStorage.getItem('currency_symbols') ){\r\n\r\n      setAllCurrency( JSON.parse( sessionStorage.getItem('currency_symbols') ) )\r\n      console.log('Symbols loaded from session storage')\r\n\r\n    }else{\r\n\r\n      fetch(`https://api.exchangeratesapi.io/v1/symbols?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n\r\n              const s = data.symbols    \r\n              const temp_array = Object.keys(s).map( (key,i) => {  \r\n                return { name: s[key], code: key, index: i, active: false }\r\n              })\r\n              setAllCurrency(temp_array)\r\n              sessionStorage.setItem('currency_symbols', JSON.stringify(temp_array))\r\n              console.log('Symbols fetched from the server')\r\n\r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n\r\n    }\r\n    \r\n  }, [])\r\n\r\n  // Store currency to sessionStorage in order to reduce the number of interogations to the API\r\n  useEffect(() => {\r\n    if(allCurrency.length){\r\n      sessionStorage.setItem('currency_symbols', JSON.stringify(allCurrency))\r\n    }\r\n  }, [allCurrency])\r\n\r\n\r\n  // Fetch new rates each time the date is changing; if the date input is cleared, then we receive the latest rates\r\n  useEffect(() => {\r\n\r\n    // Convert date from 2021-08-19 Thu Aug 19 2021 20:32:24 GMT+0300 (Eastern European Summer Time) to 2021-08-19 format\r\n    const formatDate = date => {\r\n    \r\n      let d = new Date(date),\r\n          month = '' + (d.getMonth() + 1),\r\n          day = '' + d.getDate(),\r\n          year = d.getFullYear()\r\n  \r\n      if (month.length < 2) \r\n          month = '0' + month\r\n      if (day.length < 2) \r\n          day = '0' + day\r\n  \r\n      return [year, month, day].join('-')\r\n    }\r\n\r\n    if(date){\r\n      fetch(`https://api.exchangeratesapi.io/v1/${ formatDate(date) }?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){             \r\n            setRates(data.rates)           \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n\r\n    }else{\r\n      fetch(`https://api.exchangeratesapi.io/v1/latest?access_key=${access_key}`)\r\n      .then(response => response.json())\r\n      .then(data => {            \r\n          if(data.success){ \r\n            setBase(data.base)              \r\n            setRates(data.rates)            \r\n          }else{\r\n              console.error(data)\r\n          }\r\n      }).catch((err)=>{\r\n          console.error(err)\r\n      })\r\n    }\r\n  }, [date])\r\n\r\n  // Close the currency list function\r\n  const handleFadeOut = () => {\r\n    \r\n    setToggleChevron(false)\r\n\r\n    if(currencyRef.current){\r\n      TweenMax.to(\r\n        currencyRef.current,\r\n        .3,\r\n        { y: '200px', opacity: 0 }\r\n      )\r\n  \r\n      setTimeout(()=>setShowCurrencyList(false), 300)\r\n    }\r\n  }\r\n\r\n  // Toggle opacity of the root element when the currency list is visible or not\r\n  useEffect(() => {\r\n    if(toggleChevron){\r\n      document.getElementById('root').classList.add(\"modal\")\r\n    }else{\r\n      document.getElementById('root').classList.remove(\"modal\")\r\n    }\r\n  }, [toggleChevron])\r\n\r\n  // State management in order to avoid props drilling\r\n  const state = { coeficient, setCoeficient, toggleChevron, setToggleChevron, handleFadeOut, amount, setAmount, allCurrency, setAllCurrency, base, setBase, showCurrencyList, setShowCurrencyList, currencyRef, rates, setRates, date, setDate }\r\n\r\n  return (\r\n    <MainContext.Provider value={state}>\r\n    <>\r\n        <Header />\r\n        <div className='body' onClick={ handleFadeOut }>\r\n            { allCurrency.map(currency => {\r\n              if(currency.active){\r\n                return <Card currency={currency} key={currency.code} /> \r\n              }else{\r\n                return undefined\r\n              }\r\n            }) }\r\n        </div>\r\n        { showCurrencyList && <Suspense fallback={<Loading />}><Currency /></Suspense> }\r\n        <Footer />\r\n    </>\r\n    </MainContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react'\r\n\r\nconst MainContext = React.createContext()\r\nexport default MainContext"],"sourceRoot":""}